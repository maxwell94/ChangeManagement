import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        
		//creo un foglio excel
		XSSFWorkbook workbook = new XSSFWorkbook(); 
		
		//creo un tab prova
		XSSFSheet sheet = workbook.createSheet("prova");
		
		Map<String,Object[]> data = new TreeMap<String,Object[]>();
		
		data.put("1", new Object[] {"ID", "NAME", "LASTNAME"});
        data.put("2", new Object[] {1, "Amit", "Shukla"});
        data.put("3", new Object[] {2, "Lokesh", "Gupta"});
        data.put("4", new Object[] {3, "John", "Adwards"});
        data.put("5", new Object[] {4, "Brian", "Schultz"});
        
        Set <String> keyset = data.keySet();
        int rownum = 0; 
        
        for(String key: keyset) {
        	
        	Row row = sheet.createRow(rownum++); //creo una riga vuota in excel 
        	Object [] items = data.get(key); // per ogni chiave prendo l'array di oggetti
        	int celnum = 0; 
        	
        	for(Object o: items) {
        		Cell cell = row.createCell(celnum++); //per ogni riga creo delle celle
        		
        		if(o instanceof String) { //guardo se l'oggetto che sto controllando è una stringa
        			
        			cell.setCellValue( (String) o );
        			
        		}else if(o instanceof Integer) { //guardo se l'oggetto che sto controllando è un intero
        			
        			cell.setCellValue( (Integer) o );
        		}
        	}
        }
        	
    	try {
    		
    		File f = new File("file.xlsx");
    		if(!f.exists()) { // se non esiste
    			FileOutputStream out = new FileOutputStream(new File("file.xlsx"));
    			workbook.write(out);
    			out.close();
    			
    		}else {
    			System.out.println("esiste già");
    			leggi();
    		}
    		
    		
    	}catch(Exception ex) { ex.printStackTrace(); }
		
	}

	private static void leggi() {
		// TODO Auto-generated method stub
		
		try {
			
			FileInputStream in = new FileInputStream(new File("file2.xlsx")); 
			XSSFWorkbook workbook = new XSSFWorkbook(in); //apro il file indicato
			XSSFSheet desiredSheet = workbook.getSheetAt(0); // vado nel primo tab
			
			/* ora lo devo scorrere quindi devo avere un rowIterator per ogni riga e 
			 * columnIterator per ogni colonna */
			
			Iterator<Row> rowIterator = desiredSheet.iterator();
			while( rowIterator.hasNext() ) {  //scorro tutte le righe dentro il tab 0
				
				Row row = rowIterator.next(); // prendo ogni riga
				Iterator<Cell> cellIterator = row.cellIterator(); // devo scorrere tutte le colonne
				int cellNum = 0; 
				Map <String,Object[]> currentInfo = new TreeMap <String, Object[]> ();
				Object [] items = new Object [2]; 
				
				String C_Game = "";
				String C_File = "";
				String C_Sha1 = "";
				
				while(cellIterator.hasNext()) {
					
					Cell cell = cellIterator.next(); //prendo ogni cella 
					
					switch(cell.getCellType()) {
					
					case NUMERIC:  
						//System.out.print(cell.getNumericCellValue() +"\t\t");
						break;
					case STRING:
						//System.out.print(cell.getStringCellValue()+"\t\t");
						if(cellNum == 0) {
							C_Game = cell.getStringCellValue(); 
						}else if(cellNum == 1) {
							C_File = cell.getStringCellValue(); 
						}else if(cellNum == 2){
							C_Sha1 = cell.getStringCellValue(); 
						}
						
						break;
					}
					
					cellNum++;
				}
				
				items[0] = C_Game; 
				items[1] = C_File; 
				currentInfo.put(C_Sha1, items);
				
				System.out.println("");
			}
			
			
			
			in.close();
			
		}catch(Exception ex) { ex.printStackTrace(); }

	}

}
